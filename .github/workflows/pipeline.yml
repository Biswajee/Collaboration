name: Collaboration pipeline

on:
  push:
    branches:
      - master
      - develop
      - feature/*
      - hotfix/*
      - bugfix/*

  pull_request:
    branches:
      - master
      - develop
      - feature/*
      - hotfix/*
      - bugfix/*

jobs:
  install-application:
    name: Installs collaboration
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run apt update
        run: | 
          sudo apt update
          sudo apt upgrade
        shell: bash

      - name: Install MySQL client
        shell: bash
        run: |
          # install the client
          sudo apt install mysql-server
          # run security scan
          ./mysql_secure.sh

      - name: Install requirements
        shell: bash
        run: make i

      - name: Make migrations
        shell: bash
        run: make m && make mn

      - name: Run tests
        shell: bash
        run: make t

  # codacy-security-scan:
  #   name: Codacy Security Scan
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
  #     - name: Run Codacy Analysis CLI
  #       uses: codacy/codacy-analysis-cli-action@1.1.0
  #       with:
  #         # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
  #         # You can also omit the token and run the tools that support default configurations
  #         project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
  #         verbose: true
  #         output: results.sarif
  #         format: sarif
  #         # Adjust severity of non-security issues
  #         gh-code-scanning-compat: true
  #         # Force 0 exit code to allow SARIF file generation
  #         # This will handover control about PR rejection to the GitHub side
  #         max-allowed-issues: 2147483647

  #     # Upload the SARIF file generated in the previous step
  #     - name: Upload SARIF results file
  #       uses: github/codeql-action/upload-sarif@v1
  #       with:
  #         sarif_file: results.sarif
